
% Generates a verilog .v file containing a `define for a list of prbs
% matrices
% Arguments
%   inputs = cell array of structs, each struct should contain 3 fields:
%       length = the length of the PRBS
%       bits = number of bits the PRBS outputs per cycle
%       coefficients = prbs coefficients, given as a HEX string
%   file_name = output verilog file name
function [] = gen_prbs_verilog( inputs, file_name )

    file = fopen(file_name, 'w');

    % Write file header
    fprintf(file, '\n');
    fprintf(file, '// %s\n', 'PRBS matrix define file generated by gen_prbs_verilog.m');
    fprintf(file, '// %s\n', 'Matrix entries [length, bits, coefficients]');
    for i=1:length(inputs)
        fprintf(file, '//     %d, %d, %d''h%s, \n', ...
                inputs{i}.length, ...
                inputs{i}.bits, ...
                size(inputs{i}.coefficients, 2), ...
                inputs{i}.coefficients ...
            );        
    end
    fprintf(file, '\n');
    
    % Write global `define
    fprintf(file, '%s\\\n', '`define PRBSMatrix(n, m) ( ');    
    % Go through each input
    for i=1:length(inputs)
        % Begin writing entry
        fprintf(file, '    ((n == %d) && (m == %d)) ? \\\n', inputs{i}.length, inputs{i}.bits); 
        fprintf(file, '        { \\\n'); 
        % Get matrix
        mat = get_prbs_matrix(inputs{i}.length, inputs{i}.bits, ...
            fliplr(dec2binvec(hex2dec(inputs{i}.coefficients), inputs{i}.length)));
        arr = mat.x;
        % Write the matrix
        for m=1:size(arr, 1)            
            row = dec2bin(bi2de(fliplr(arr(m, :))), size(arr, 2));
            % Don't add the comma for the last row
            if m==size(arr,1)
                fprintf(file, '            %d''b%s \\\n', size(arr, 2), row);
            else
                fprintf(file, '            %d''b%s, \\\n', size(arr, 2), row);
            end
        end
        % End writing entry, prepare for next entry
        fprintf(file, '        } : \\\n');
    end
    
    % Write last default entry
    fprintf(file, '    1''b0)\n'); 
    
    fclose(file);
    
end

